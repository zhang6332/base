<application>
    <component name="CrudSettings">
        <option name="initialized" value="true"/>
        <option name="projectTemplates">
            <list>
                <ProjectTemplateDO>
                    <option name="createName" value="zjh"/>
                    <option name="createTime" value="2022-02-15 10:56:29"/>
                    <option name="description" value="ORM框架采用MybatisPlus，数据库采用MySQL"/>
                    <option name="fileTemplates"
                            value="[{&quot;content&quot;:&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n&lt;project xmlns=\&quot;http://maven.apache.org/POM/4.0.0\&quot; xmlns:xsi=\&quot;http://www.w3.org/2001/XMLSchema-instance\&quot;\n         xsi:schemaLocation=\&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.5.8&lt;/version&gt;\n    &lt;/parent&gt;\n\n    &lt;groupId&gt;${maven.groupId}&lt;/groupId&gt;\n    &lt;artifactId&gt;${maven.artifactId}&lt;/artifactId&gt;\n    &lt;version&gt;${maven.version}&lt;/version&gt;\n    &lt;packaging&gt;jar&lt;/packaging&gt;\n\n    &lt;properties&gt;\n        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n\n        &lt;swagger.version&gt;3.0.0&lt;/swagger.version&gt;\n        &lt;knife4j.version&gt;3.0.3&lt;/knife4j.version&gt;\n        &lt;fastjson.version&gt;1.2.79&lt;/fastjson.version&gt;\n        &lt;druid.version&gt;1.2.8&lt;/druid.version&gt;\n        &lt;mybatis-plus.version&gt;3.5.0&lt;/mybatis-plus.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n                &lt;dependency&gt;\n            &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;\n            &lt;version&gt;${r'${swagger.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.github.xiaoymin&lt;/groupId&gt;\n            &lt;artifactId&gt;knife4j-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;${r'${knife4j.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n            &lt;version&gt;${r'${fastjson.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;${r'${druid.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.baomidou&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;${r'${mybatis-plus.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;        \n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n&quot;,&quot;name&quot;:&quot;pom.xml&quot;,&quot;path&quot;:&quot;pom.xml&quot;,&quot;type&quot;:1},{&quot;content&quot;:&quot;package ${basePackage};\n\nimport org.mybatis.spring.annotation.MapperScan;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.cache.annotation.EnableCaching;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\n\n@SpringBootApplication\n@MapperScan(\&quot;${basePackage}.dao\&quot;)\npublic class Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n&quot;,&quot;name&quot;:&quot;Application.java&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/Application.java&quot;,&quot;type&quot;:1},{&quot;content&quot;:&quot;spring:\n  datasource:\n    url: jdbc:mysql://${dataSource.host}:${dataSource.port?c}/${dataSource.database}?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;serverTimezone=GMT%2B8\n    username: ${dataSource.username}\n    password: ${dataSource.password}\n    hikari:\n      minimum-idle: 5\n      maximum-pool-size: 100\n      idle-timeout: 30000\n      validation-timeout: 250\n      max-lifetime: 1800000\n      connection-timeout: 30000\n      connection-test-query: SELECT 1\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: GMT+8\n&quot;,&quot;name&quot;:&quot;application.yml&quot;,&quot;path&quot;:&quot;src/main/resources/application.yml&quot;,&quot;type&quot;:1},{&quot;content&quot;:&quot;package ${basePackage+'.config'};\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport springfox.documentation.builders.ApiInfoBuilder;\nimport springfox.documentation.builders.RequestHandlerSelectors;\nimport springfox.documentation.service.ApiInfo;\nimport springfox.documentation.spi.DocumentationType;\nimport springfox.documentation.spring.web.plugins.Docket;\nimport springfox.documentation.swagger2.annotations.EnableSwagger2;\n\n/**\n * Swagger配置\n */\n@Configuration\n@EnableSwagger2\npublic class Swagger2Config {\n    @Bean\n    public Docket docket() {\n        return new Docket(DocumentationType.SWAGGER_2)\n                .apiInfo(apiInfo())\n                .select()\n                .apis(RequestHandlerSelectors.basePackage(\&quot;${basePackage+'.controller'}\&quot;))\n                .build();\n    }\n\n    private ApiInfo apiInfo() {\n        return new ApiInfoBuilder()\n                .title(\&quot;${maven.artifactId} API文档\&quot;)\n                .description(\&quot;${maven.artifactId} API文档\&quot;)\n                .version(\&quot;${maven.version}\&quot;)\n                .build();\n    }\n}\n&quot;,&quot;name&quot;:&quot;Swagger2Config.java&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/config/Swagger2Config.java&quot;,&quot;type&quot;:1},{&quot;content&quot;:&quot;package ${basePackage}.model;\n\nimport lombok.Data;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableField;\n&lt;#assign columns=table.columns /&gt;\n\n&lt;#list columns as column&gt;\n&lt;#if !importedDate?? &amp;&amp; column.typeSimpleName=='Date'&gt;\nimport java.util.Date;\n&lt;#assign importedDate=true /&gt;\n&lt;/#if&gt;\n&lt;/#list&gt;\n/**\n* ${table.remarks}\n*/\n@Data\n@TableName(\&quot;${table.tableName}\&quot;)\npublic class ${table.upperCamelName} {\n&lt;#list columns as column&gt;\n    /**\n    * ${column.remarks}\n    */\n    &lt;#if column.primaryKey&gt;\n    @TableId\n    &lt;/#if&gt;\n    @TableField(\&quot;${column.columnName}\&quot;)\n    private ${column.typeSimpleName} ${column.lowerCamelName};\n&lt;/#list&gt;\n}&quot;,&quot;name&quot;:&quot;model&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/model/${table.upperCamelName}.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;package ${basePackage}.dao;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport ${basePackage}.model.${table.upperCamelName};\n\n/**\n * ${table.remarks}\n */\npublic interface ${table.upperCamelName}Mapper extends BaseMapper&lt;${table.upperCamelName}&gt; {\n\n}&quot;,&quot;name&quot;:&quot;Mapper&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/dao/${table.upperCamelName}Mapper.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;package ${basePackage}.service;\n\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport ${basePackage}.model.${table.upperCamelName};\n\n/**\n * ${table.remarks}\n */\npublic interface ${table.upperCamelName}Service extends IService&lt;${table.upperCamelName}&gt; {\n\n&lt;#list table.columns as column&gt;\n    &lt;#if column.primaryKey&gt;\n    /**\n     * 通过ID查询单个${table.remarks}\n     *\n     * @param id ID\n     * @return {@link ${table.upperCamelName}}\n     */\n     ${table.upperCamelName} findById(${column.typeSimpleName} id);\n\n    /**\n     * 分页查询${table.remarks}\n     *\n     * @param pageNum   页号\n     * @param pageSize 每页大小\n     * @return {@link ${table.upperCamelName}}\n     */\n     IPage&lt;${table.upperCamelName}&gt; findByPage(int pageNum, int pageSize);\n\n    /**\n     * 新增${table.remarks}\n     *\n     * @param ${table.lowerCamelName} ${table.upperCamelName}\n     */\n    void insert(${table.upperCamelName} ${table.lowerCamelName});\n\n    /**\n     * 修改${table.remarks}\n     *\n     * @param ${table.lowerCamelName} ${table.upperCamelName}\n     */\n    void update(${table.upperCamelName} ${table.lowerCamelName});\n\n    /**\n     * 通过ID删除单个${table.remarks}\n     *\n     * @param id ID\n     */\n    void deleteById(${column.typeSimpleName} id);\n    &lt;/#if&gt;\n&lt;/#list&gt;\n\n}&quot;,&quot;name&quot;:&quot;Service&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/service/${table.upperCamelName}Service.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;package ${basePackage}.service.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport org.springframework.stereotype.Service;\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport ${basePackage}.model.${table.upperCamelName};\nimport ${basePackage}.dao.${table.upperCamelName}Mapper;\nimport ${basePackage}.service.${table.upperCamelName}Service;\n\n@Service\npublic class ${table.upperCamelName}ServiceImpl extends ServiceImpl&lt;${table.upperCamelName}Mapper, ${table.upperCamelName}&gt; implements ${table.upperCamelName}Service{\n\n&lt;#list table.columns as column&gt;\n    &lt;#if column.primaryKey&gt;\n    @Autowired\n    private ${table.upperCamelName}Mapper ${table.lowerCamelName}Mapper;\n\n    @Override\n    public ${table.upperCamelName} findById(${column.typeSimpleName} id){\n        return ${table.lowerCamelName}Mapper.selectById(id);\n    }\n\n    @Override\n    public IPage&lt;${table.upperCamelName}&gt; findByPage(int pageNum, int pageSize) {\n        return ${table.lowerCamelName}Mapper.selectPage(new Page&lt;&gt;(pageNum, pageSize), null);\n    }\n\n    @Override\n    public void insert(${table.upperCamelName} ${table.lowerCamelName}){\n        ${table.lowerCamelName}Mapper.insert(${table.lowerCamelName});\n    }\n\n    @Override\n    public void update(${table.upperCamelName} ${table.lowerCamelName}){\n        ${table.lowerCamelName}Mapper.updateById(${table.lowerCamelName});\n    }\n\n    @Override\n    public void deleteById(${column.typeSimpleName} id){\n        ${table.lowerCamelName}Mapper.deleteById(id);\n    }\n    &lt;/#if&gt;\n&lt;/#list&gt;\n\n}&quot;,&quot;name&quot;:&quot;ServiceImpl&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/service/impl/${table.upperCamelName}ServiceImpl.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;package ${basePackage}.controller;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport io.swagger.annotations.ApiParam;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\nimport ${basePackage}.model.${table.upperCamelName};\nimport ${basePackage}.service.${table.upperCamelName}Service;\n\n&lt;#list table.columns as column&gt;\n&lt;#if column.primaryKey&gt;\n/**\n * ${table.remarks}\n */\n@RestController\n@RequestMapping(\&quot;/${table.lowerCamelName}\&quot;)\n@Api(tags = \&quot;${table.remarks}\&quot;)\npublic class ${table.upperCamelName}Controller {\n    @Autowired\n    private ${table.upperCamelName}Service ${table.lowerCamelName}Service;\n\n    @GetMapping(\&quot;/{id}\&quot;)\n    @ApiOperation(\&quot;通过ID查询单个${table.remarks}\&quot;)\n    public ${table.upperCamelName} findById(@ApiParam(\&quot;ID\&quot;) @PathVariable(\&quot;id\&quot;) ${column.typeSimpleName} id) {\n        return ${table.lowerCamelName}Service.findById(id);\n    }\n\n    @GetMapping\n    @ApiOperation(\&quot;分页查询${table.remarks}\&quot;)\n    public IPage&lt;${table.upperCamelName}&gt; findByPage(@ApiParam(\&quot;页号\&quot;) @RequestParam(defaultValue = \&quot;1\&quot;) Integer pageNum,\n                                                @ApiParam(\&quot;每页大小\&quot;) @RequestParam(defaultValue = \&quot;10\&quot;) Integer pageSize) {\n        return ${table.lowerCamelName}Service.findByPage(pageNum, pageSize);\n    }\n\n    @PostMapping\n    @ApiOperation(\&quot;新增${table.remarks}\&quot;)\n    public void insert(@RequestBody ${table.upperCamelName} ${table.lowerCamelName}) {\n        ${table.lowerCamelName}Service.insert(${table.lowerCamelName});\n    }\n\n    @PutMapping\n    @ApiOperation(\&quot;修改${table.remarks}\&quot;)\n    public void update(@RequestBody ${table.upperCamelName} ${table.lowerCamelName}) {\n        ${table.lowerCamelName}Service.update(${table.lowerCamelName});\n    }\n\n    @DeleteMapping(\&quot;/{id}\&quot;)\n    @ApiOperation(\&quot;通过ID删除单个${table.remarks}\&quot;)\n    public void deleteById(@ApiParam(\&quot;ID\&quot;) @PathVariable(\&quot;id\&quot;) ${column.typeSimpleName} id) {\n        ${table.lowerCamelName}Service.deleteById(id);\n    }\n}\n    &lt;/#if&gt;\n&lt;/#list&gt;&quot;,&quot;name&quot;:&quot;Controller&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/controller/${table.upperCamelName}Controller.java&quot;,&quot;type&quot;:2}]"/>
                    <option name="id" value="1493418924169879553"/>
                    <option name="name" value="Spring Boot With MybatisPlus"/>
                    <option name="organizationId" value="1493398775811387393"/>
                    <option name="organizationName" value="ilsmp"/>
                    <option name="projectType" value="2"/>
                    <option name="publicFlag" value="1"/>
                    <option name="updateTime" value="2022-08-05 08:50:06"/>
                </ProjectTemplateDO>
                <ProjectTemplateDO>
                    <option name="createName" value="zjh"/>
                    <option name="createTime" value="2022-04-06 17:35:52"/>
                    <option name="description" value="ORM框架采用JPA，数据库采用Mysql"/>
                    <option name="fileTemplates"
                            value="[{&quot;content&quot;:&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n&lt;project xmlns=\&quot;http://maven.apache.org/POM/4.0.0\&quot; xmlns:xsi=\&quot;http://www.w3.org/2001/XMLSchema-instance\&quot;\n         xsi:schemaLocation=\&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.5.8&lt;/version&gt;\n    &lt;/parent&gt;\n\n    &lt;groupId&gt;${maven.groupId}&lt;/groupId&gt;\n    &lt;artifactId&gt;${maven.artifactId}&lt;/artifactId&gt;\n    &lt;version&gt;${maven.version}&lt;/version&gt;\n    &lt;packaging&gt;jar&lt;/packaging&gt;\n\n    &lt;properties&gt;\n        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n\n        &lt;swagger.version&gt;3.0.0&lt;/swagger.version&gt;\n        &lt;knife4j.version&gt;3.0.3&lt;/knife4j.version&gt;\n        &lt;fastjson.version&gt;1.2.79&lt;/fastjson.version&gt;\n        &lt;druid.version&gt;1.2.8&lt;/druid.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n        &lt;/dependency&gt;        \n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;\n            &lt;version&gt;${r'${swagger.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.github.xiaoymin&lt;/groupId&gt;\n            &lt;artifactId&gt;knife4j-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;${r'${knife4j.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n            &lt;version&gt;${r'${fastjson.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;${r'${druid.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n&quot;,&quot;name&quot;:&quot;pom.xml&quot;,&quot;path&quot;:&quot;pom.xml&quot;,&quot;type&quot;:1},{&quot;content&quot;:&quot;package ${basePackage};\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.cache.annotation.EnableCaching;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\n\n@SpringBootApplication\npublic class Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n&quot;,&quot;name&quot;:&quot;Application.java&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/Application.java&quot;,&quot;type&quot;:1},{&quot;content&quot;:&quot;spring:\n  datasource:\n    url: jdbc:mysql://${dataSource.host}:${dataSource.port?c}/${dataSource.database}?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;serverTimezone=GMT%2B8\n    username: ${dataSource.username}\n    password: ${dataSource.password}\n    hikari:\n      minimum-idle: 5\n      maximum-pool-size: 100\n      idle-timeout: 30000\n      validation-timeout: 250\n      max-lifetime: 1800000\n      connection-timeout: 30000\n      connection-test-query: SELECT 1\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: GMT+8\n&quot;,&quot;name&quot;:&quot;application.yml&quot;,&quot;path&quot;:&quot;src/main/resources/application.yml&quot;,&quot;type&quot;:1},{&quot;content&quot;:&quot;package ${basePackage+'.config'};\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport springfox.documentation.builders.ApiInfoBuilder;\nimport springfox.documentation.builders.RequestHandlerSelectors;\nimport springfox.documentation.service.ApiInfo;\nimport springfox.documentation.spi.DocumentationType;\nimport springfox.documentation.spring.web.plugins.Docket;\nimport springfox.documentation.swagger2.annotations.EnableSwagger2;\n\n/**\n * Swagger配置\n */\n@Configuration\n@EnableSwagger2\npublic class Swagger2Config {\n    @Bean\n    public Docket docket() {\n        return new Docket(DocumentationType.SWAGGER_2)\n                .apiInfo(apiInfo())\n                .select()\n                .apis(RequestHandlerSelectors.basePackage(\&quot;${basePackage+'.controller'}\&quot;))\n                .build();\n    }\n\n    private ApiInfo apiInfo() {\n        return new ApiInfoBuilder()\n                .title(\&quot;${maven.artifactId} API文档\&quot;)\n                .description(\&quot;${maven.artifactId} API文档\&quot;)\n                .version(\&quot;${maven.version}\&quot;)\n                .build();\n    }\n}\n&quot;,&quot;name&quot;:&quot;Swagger2Config.java&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/config/Swagger2Config.java&quot;,&quot;type&quot;:1},{&quot;content&quot;:&quot;package ${basePackage}.model;\n\nimport lombok.Data;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n&lt;#assign columns=table.columns /&gt;\n\n&lt;#list columns as column&gt;\n&lt;#if !importedDate?? &amp;&amp; column.typeSimpleName=='Date'&gt;\nimport java.util.Date;\n&lt;#assign importedDate=true /&gt;\n&lt;/#if&gt;\n&lt;/#list&gt;\n/**\n* ${table.remarks}\n*/\n@Data\n@Entity\n@Table(name = \&quot;${table.tableName}\&quot;)\npublic class ${table.upperCamelName} {\n&lt;#list columns as column&gt;\n    /**\n    * ${column.remarks}\n    */\n    &lt;#if column.primaryKey&gt;\n    @Id\n    &lt;/#if&gt;\n    @Column(name = \&quot;${column.columnName}\&quot;)    \n    private ${column.typeSimpleName} ${column.lowerCamelName};\n&lt;/#list&gt;\n}&quot;,&quot;name&quot;:&quot;model&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/model/${table.upperCamelName}.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;package ${basePackage}.repository;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport ${basePackage}.model.${table.upperCamelName};\n\n&lt;#list table.columns as column&gt;\n&lt;#if column.primaryKey&gt; \n/**\n * ${table.remarks}\n */\npublic interface ${table.upperCamelName}Repository extends JpaRepository&lt;${table.upperCamelName}, ${column.typeSimpleName}&gt; {\n\n}    \n&lt;/#if&gt;    \n&lt;/#list&gt;&quot;,&quot;name&quot;:&quot;Repository&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/repository/${table.upperCamelName}Repository.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;package ${basePackage}.service;\n\nimport ${basePackage}.model.${table.upperCamelName};\nimport org.springframework.data.domain.Page;\n\n&lt;#list table.columns as column&gt;\n&lt;#if column.primaryKey&gt;\n/**\n * ${table.remarks}\n */\npublic interface ${table.upperCamelName}Service {\n\n    /**\n     * 通过ID查询单个${table.remarks}\n     *\n     * @param id ID\n     * @return {@link ${table.upperCamelName}}\n     */\n     ${table.upperCamelName} findById(${column.typeSimpleName} id);\n\n    /**\n     * 分页查询${table.remarks}\n     *\n     * @param pageNum   页号\n     * @param pageSize 每页大小\n     * @return {@link ${table.upperCamelName}}\n     */\n     Page&lt;${table.upperCamelName}&gt; findByPage(int pageNum, int pageSize);\n\n    /**\n     * 新增${table.remarks}\n     *\n     * @param ${table.lowerCamelName} ${table.upperCamelName}\n     */\n    void insert(${table.upperCamelName} ${table.lowerCamelName});\n\n    /**\n     * 修改${table.remarks}\n     *\n     * @param ${table.lowerCamelName} ${table.upperCamelName}\n     */\n    void update(${table.upperCamelName} ${table.lowerCamelName});\n\n    /**\n     * 通过ID删除单个${table.remarks}\n     *\n     * @param id ID\n     */\n    void deleteById(${column.typeSimpleName} id);\n\n}\n&lt;/#if&gt;\n&lt;/#list&gt;&quot;,&quot;name&quot;:&quot;Service&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/service/${table.upperCamelName}Service.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;package ${basePackage}.service.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.stereotype.Service;\nimport ${basePackage}.model.${table.upperCamelName};\nimport ${basePackage}.repository.${table.upperCamelName}Repository;\nimport ${basePackage}.service.${table.upperCamelName}Service;\n\n&lt;#list table.columns as column&gt;\n&lt;#if column.primaryKey&gt;\n@Service\npublic class ${table.upperCamelName}ServiceImpl implements ${table.upperCamelName}Service {\n\n    @Autowired\n    private ${table.upperCamelName}Repository ${table.lowerCamelName}Repository;\n\n    @Override\n    public ${table.upperCamelName} findById(${column.typeSimpleName} id){\n        return ${table.lowerCamelName}Repository.findById(id).orElse(null);\n    }\n\n    @Override\n    public Page&lt;${table.upperCamelName}&gt; findByPage(int pageNum, int pageSize) {\n        return ${table.lowerCamelName}Repository.findAll(PageRequest.of(pageNum, pageSize));\n    }\n\n    @Override\n    public void insert(${table.upperCamelName} ${table.lowerCamelName}){\n        ${table.lowerCamelName}Repository.save(${table.lowerCamelName});\n    }\n\n    @Override\n    public void update(${table.upperCamelName} ${table.lowerCamelName}){\n        ${table.lowerCamelName}Repository.save(${table.lowerCamelName});\n    }\n\n    @Override\n    public void deleteById(${column.typeSimpleName} id){\n        ${table.lowerCamelName}Repository.deleteById(id);\n    }\n\n}\n&lt;/#if&gt;\n&lt;/#list&gt;&quot;,&quot;name&quot;:&quot;ServiceImpl&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/service/impl/${table.upperCamelName}ServiceImpl.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;package ${basePackage}.controller;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport io.swagger.annotations.ApiParam;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.Page;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\nimport ${basePackage}.model.${table.upperCamelName};\nimport ${basePackage}.service.${table.upperCamelName}Service;\n\n&lt;#list table.columns as column&gt;\n&lt;#if column.primaryKey&gt;\n/**\n * ${table.remarks}\n */\n@RestController\n@RequestMapping(\&quot;/${table.lowerCamelName}\&quot;)\n@Api(tags = \&quot;${table.remarks}\&quot;)\npublic class ${table.upperCamelName}Controller {\n    @Autowired\n    private ${table.upperCamelName}Service ${table.lowerCamelName}Service;\n\n    @GetMapping(\&quot;/{id}\&quot;)\n    @ApiOperation(\&quot;通过ID查询单个${table.remarks}\&quot;)\n    public ${table.upperCamelName} findById(@ApiParam(\&quot;ID\&quot;) @PathVariable(\&quot;id\&quot;) ${column.typeSimpleName} id) {\n        return ${table.lowerCamelName}Service.findById(id);\n    }\n\n    @GetMapping\n    @ApiOperation(\&quot;分页查询${table.remarks}\&quot;)\n    public Page&lt;${table.upperCamelName}&gt; findByPage(@ApiParam(\&quot;页号\&quot;) @RequestParam(defaultValue = \&quot;1\&quot;) Integer pageNum,\n                                                @ApiParam(\&quot;每页大小\&quot;) @RequestParam(defaultValue = \&quot;10\&quot;) Integer pageSize) {\n        return ${table.lowerCamelName}Service.findByPage(pageNum, pageSize);\n    }\n\n    @PostMapping\n    @ApiOperation(\&quot;新增${table.remarks}\&quot;)\n    public void insert(@RequestBody ${table.upperCamelName} ${table.lowerCamelName}) {\n        ${table.lowerCamelName}Service.insert(${table.lowerCamelName});\n    }\n\n    @PutMapping\n    @ApiOperation(\&quot;修改${table.remarks}\&quot;)\n    public void update(@RequestBody ${table.upperCamelName} ${table.lowerCamelName}) {\n        ${table.lowerCamelName}Service.update(${table.lowerCamelName});\n    }\n\n    @DeleteMapping(\&quot;/{id}\&quot;)\n    @ApiOperation(\&quot;通过ID删除单个${table.remarks}\&quot;)\n    public void deleteById(@ApiParam(\&quot;ID\&quot;) @PathVariable(\&quot;id\&quot;) ${column.typeSimpleName} id) {\n        ${table.lowerCamelName}Service.deleteById(id);\n    }\n}\n&lt;/#if&gt;\n&lt;/#list&gt;&quot;,&quot;name&quot;:&quot;Controller&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/controller/${table.upperCamelName}Controller.java&quot;,&quot;type&quot;:2}]"/>
                    <option name="id" value="1511638812453986306"/>
                    <option name="name" value="Spring Boot With JPA"/>
                    <option name="organizationId" value="1493844491293724674"/>
                    <option name="organizationName" value="ilsmp"/>
                    <option name="projectType" value="2"/>
                    <option name="publicFlag" value="1"/>
                    <option name="updateTime" value="2022-04-07 10:39:14"/>
                </ProjectTemplateDO>
                <ProjectTemplateDO>
                    <option name="createName" value="zjh"/>
                    <option name="createTime" value="2022-04-08 16:43:45"/>
                    <option name="description" value="ORM框架采用使用XML的Mybatis"/>
                    <option name="fileTemplates"
                            value="[{&quot;content&quot;:&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?&gt;\n&lt;project xmlns=\&quot;http://maven.apache.org/POM/4.0.0\&quot; xmlns:xsi=\&quot;http://www.w3.org/2001/XMLSchema-instance\&quot;\n         xsi:schemaLocation=\&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.5.8&lt;/version&gt;\n    &lt;/parent&gt;\n\n    &lt;groupId&gt;${maven.groupId}&lt;/groupId&gt;\n    &lt;artifactId&gt;${maven.artifactId}&lt;/artifactId&gt;\n    &lt;version&gt;${maven.version}&lt;/version&gt;\n    &lt;packaging&gt;jar&lt;/packaging&gt;\n\n    &lt;properties&gt;\n        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n\n        &lt;swagger.version&gt;3.0.0&lt;/swagger.version&gt;\n        &lt;knife4j.version&gt;3.0.3&lt;/knife4j.version&gt;\n        &lt;fastjson.version&gt;1.2.79&lt;/fastjson.version&gt;\n        &lt;druid.version&gt;1.2.8&lt;/druid.version&gt;\n        &lt;mybatis.version&gt;2.0.1&lt;/mybatis.version&gt;\n        &lt;pagehelper.version&gt;1.2.10&lt;/pagehelper.version&gt;        \n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n        &lt;/dependency&gt;        \n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;${r'${mybatis.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;\n            &lt;artifactId&gt;pagehelper-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;${r'${pagehelper.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;            \n        &lt;dependency&gt;\n            &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;\n            &lt;version&gt;${r'${swagger.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.github.xiaoymin&lt;/groupId&gt;\n            &lt;artifactId&gt;knife4j-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;${r'${knife4j.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n            &lt;version&gt;${r'${fastjson.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;${r'${druid.version}'}&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n&quot;,&quot;name&quot;:&quot;pom.xml&quot;,&quot;path&quot;:&quot;pom.xml&quot;,&quot;type&quot;:1},{&quot;content&quot;:&quot;package ${basePackage};\n\nimport org.mybatis.spring.annotation.MapperScan;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\n@MapperScan(\&quot;${basePackage}.mapper\&quot;)\npublic class Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n&quot;,&quot;name&quot;:&quot;Application.java&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/Application.java&quot;,&quot;type&quot;:1},{&quot;content&quot;:&quot;spring:\n  datasource:\n    url: jdbc:mysql://${dataSource.host}:${dataSource.port?c}/${dataSource.database}?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;serverTimezone=GMT%2B8\n    username: ${dataSource.username}\n    password: ${dataSource.password}\n    hikari:\n      minimum-idle: 5\n      maximum-pool-size: 100\n      idle-timeout: 30000\n      validation-timeout: 250\n      max-lifetime: 1800000\n      connection-timeout: 30000\n      connection-test-query: SELECT 1\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: GMT+8\n    \nmybatis:\n  mapper-locations: classpath:/mapper/**/*.xml&quot;,&quot;name&quot;:&quot;application.yml&quot;,&quot;path&quot;:&quot;src/main/resources/application.yml&quot;,&quot;type&quot;:1},{&quot;content&quot;:&quot;package ${basePackage+'.config'};\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport springfox.documentation.builders.ApiInfoBuilder;\nimport springfox.documentation.builders.RequestHandlerSelectors;\nimport springfox.documentation.service.ApiInfo;\nimport springfox.documentation.spi.DocumentationType;\nimport springfox.documentation.spring.web.plugins.Docket;\nimport springfox.documentation.swagger2.annotations.EnableSwagger2;\n\n/**\n * Swagger配置\n */\n@Configuration\n@EnableSwagger2\npublic class Swagger2Config {\n    @Bean\n    public Docket docket() {\n        return new Docket(DocumentationType.SWAGGER_2)\n                .apiInfo(apiInfo())\n                .select()\n                .apis(RequestHandlerSelectors.basePackage(\&quot;${basePackage+'.controller'}\&quot;))\n                .build();\n    }\n\n    private ApiInfo apiInfo() {\n        return new ApiInfoBuilder()\n                .title(\&quot;${maven.artifactId} API文档\&quot;)\n                .description(\&quot;${maven.artifactId} API文档\&quot;)\n                .version(\&quot;${maven.version}\&quot;)\n                .build();\n    }\n}\n&quot;,&quot;name&quot;:&quot;Swagger2Config.java&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/config/Swagger2Config.java&quot;,&quot;type&quot;:1},{&quot;content&quot;:&quot;package ${basePackage}.model;\n\nimport lombok.Data;\n&lt;#assign columns=table.columns /&gt;\n\n&lt;#list columns as column&gt;\n&lt;#if !importedDate?? &amp;&amp; column.typeSimpleName=='Date'&gt;\nimport java.util.Date;\n&lt;#assign importedDate=true /&gt;\n&lt;/#if&gt;\n&lt;/#list&gt;\n/**\n* ${table.remarks}\n*/\n@Data\npublic class ${table.upperCamelName} {\n&lt;#list columns as column&gt;\n    /**\n    * ${column.remarks}\n    */\n    &lt;#if column.primaryKey&gt;\n    &lt;/#if&gt;\n    private ${column.typeSimpleName} ${column.lowerCamelName};\n&lt;/#list&gt;\n}&quot;,&quot;name&quot;:&quot;model&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/model/${table.upperCamelName}.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;package ${basePackage}.mapper;\n\nimport com.github.pagehelper.Page;\nimport ${basePackage}.model.${table.upperCamelName};\n\n&lt;#list table.columns as column&gt;\n&lt;#if column.primaryKey&gt; \n/**\n * ${table.remarks}\n */\npublic interface ${table.upperCamelName}Mapper {\n/**\n     * 通过ID查询单个${table.remarks}\n     *\n     * @param id ID\n     * @return {@link ${table.upperCamelName}}\n     */\n     ${table.upperCamelName} findById(${column.typeSimpleName} id);\n\n    /**\n     * 分页查询${table.remarks}\n     *\n     * @return {@link ${table.upperCamelName}}\n     */\n     Page&lt;${table.upperCamelName}&gt; findByPage();\n\n    /**\n     * 新增${table.remarks}\n     *\n     * @param ${table.lowerCamelName} ${table.upperCamelName}\n     */\n    void insert(${table.upperCamelName} ${table.lowerCamelName});\n\n    /**\n     * 修改${table.remarks}\n     *\n     * @param ${table.lowerCamelName} ${table.upperCamelName}\n     */\n    void update(${table.upperCamelName} ${table.lowerCamelName});\n\n    /**\n     * 通过ID删除单个${table.remarks}\n     *\n     * @param id ID\n     */\n    void deleteById(${column.typeSimpleName} id);\n}\n&lt;/#if&gt;\n&lt;/#list&gt;&quot;,&quot;name&quot;:&quot;Mapper&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/mapper/${table.upperCamelName}Mapper.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;package ${basePackage}.service;\n\nimport ${basePackage}.model.${table.upperCamelName};\nimport com.github.pagehelper.PageInfo;\n\n&lt;#list table.columns as column&gt;\n&lt;#if column.primaryKey&gt;\n/**\n * ${table.remarks}\n */\npublic interface ${table.upperCamelName}Service {\n\n    /**\n     * 通过ID查询单个${table.remarks}\n     *\n     * @param id ID\n     * @return {@link ${table.upperCamelName}}\n     */\n     ${table.upperCamelName} findById(${column.typeSimpleName} id);\n\n    /**\n     * 分页查询${table.remarks}\n     *\n     * @param pageNum   页号\n     * @param pageSize 每页大小\n     * @return {@link ${table.upperCamelName}}\n     */\n     PageInfo&lt;${table.upperCamelName}&gt; findByPage(int pageNum, int pageSize);\n\n    /**\n     * 新增${table.remarks}\n     *\n     * @param ${table.lowerCamelName} ${table.upperCamelName}\n     */\n    void insert(${table.upperCamelName} ${table.lowerCamelName});\n\n    /**\n     * 修改${table.remarks}\n     *\n     * @param ${table.lowerCamelName} ${table.upperCamelName}\n     */\n    void update(${table.upperCamelName} ${table.lowerCamelName});\n\n    /**\n     * 通过ID删除单个${table.remarks}\n     *\n     * @param id ID\n     */\n    void deleteById(${column.typeSimpleName} id);\n\n}\n&lt;/#if&gt;\n&lt;/#list&gt;&quot;,&quot;name&quot;:&quot;Service&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/service/${table.upperCamelName}Service.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;package ${basePackage}.service.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport com.github.pagehelper.PageHelper;\nimport com.github.pagehelper.PageInfo;\nimport org.springframework.stereotype.Service;\nimport ${basePackage}.model.${table.upperCamelName};\nimport ${basePackage}.mapper.${table.upperCamelName}Mapper;\nimport ${basePackage}.service.${table.upperCamelName}Service;\n\n&lt;#list table.columns as column&gt;\n&lt;#if column.primaryKey&gt;\n@Service\npublic class ${table.upperCamelName}ServiceImpl implements ${table.upperCamelName}Service {\n\n    @Autowired\n    private ${table.upperCamelName}Mapper ${table.lowerCamelName}Mapper;\n\n    @Override\n    public ${table.upperCamelName} findById(${column.typeSimpleName} id){\n        return ${table.lowerCamelName}Mapper.findById(id);\n    }\n\n    @Override\n    public PageInfo&lt;${table.upperCamelName}&gt; findByPage(int pageNum, int pageSize) {\n        PageHelper.startPage(pageNum, pageSize);\n        return PageInfo.of(${table.lowerCamelName}Mapper.findByPage());\n    }\n\n    @Override\n    public void insert(${table.upperCamelName} ${table.lowerCamelName}){\n        ${table.lowerCamelName}Mapper.insert(${table.lowerCamelName});\n    }\n\n    @Override\n    public void update(${table.upperCamelName} ${table.lowerCamelName}){\n        ${table.lowerCamelName}Mapper.update(${table.lowerCamelName});\n    }\n\n    @Override\n    public void deleteById(${column.typeSimpleName} id){\n        ${table.lowerCamelName}Mapper.deleteById(id);\n    }\n\n}\n&lt;/#if&gt;\n&lt;/#list&gt;&quot;,&quot;name&quot;:&quot;ServiceImpl&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/service/impl/${table.upperCamelName}ServiceImpl.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;package ${basePackage}.controller;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport io.swagger.annotations.ApiParam;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport com.github.pagehelper.PageInfo;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\nimport ${basePackage}.model.${table.upperCamelName};\nimport ${basePackage}.service.${table.upperCamelName}Service;\n\n&lt;#list table.columns as column&gt;\n&lt;#if column.primaryKey&gt;\n/**\n * ${table.remarks}\n */\n@RestController\n@RequestMapping(\&quot;/${table.lowerCamelName}\&quot;)\n@Api(tags = \&quot;${table.remarks}\&quot;)\npublic class ${table.upperCamelName}Controller {\n    @Autowired\n    private ${table.upperCamelName}Service ${table.lowerCamelName}Service;\n\n    @GetMapping(\&quot;/{id}\&quot;)\n    @ApiOperation(\&quot;通过ID查询单个${table.remarks}\&quot;)\n    public ${table.upperCamelName} findById(@ApiParam(\&quot;ID\&quot;) @PathVariable(\&quot;id\&quot;) ${column.typeSimpleName} id) {\n        return ${table.lowerCamelName}Service.findById(id);\n    }\n\n    @GetMapping\n    @ApiOperation(\&quot;分页查询${table.remarks}\&quot;)\n    public PageInfo&lt;${table.upperCamelName}&gt; findByPage(@ApiParam(\&quot;页号\&quot;) @RequestParam(defaultValue = \&quot;1\&quot;) Integer pageNum,\n                                                @ApiParam(\&quot;每页大小\&quot;) @RequestParam(defaultValue = \&quot;10\&quot;) Integer pageSize) {\n        return ${table.lowerCamelName}Service.findByPage(pageNum, pageSize);\n    }\n\n    @PostMapping\n    @ApiOperation(\&quot;新增${table.remarks}\&quot;)\n    public void insert(@RequestBody ${table.upperCamelName} ${table.lowerCamelName}) {\n        ${table.lowerCamelName}Service.insert(${table.lowerCamelName});\n    }\n\n    @PutMapping\n    @ApiOperation(\&quot;修改${table.remarks}\&quot;)\n    public void update(@RequestBody ${table.upperCamelName} ${table.lowerCamelName}) {\n        ${table.lowerCamelName}Service.update(${table.lowerCamelName});\n    }\n\n    @DeleteMapping(\&quot;/{id}\&quot;)\n    @ApiOperation(\&quot;通过ID删除单个${table.remarks}\&quot;)\n    public void deleteById(@ApiParam(\&quot;ID\&quot;) @PathVariable(\&quot;id\&quot;) ${column.typeSimpleName} id) {\n        ${table.lowerCamelName}Service.deleteById(id);\n    }\n}\n&lt;/#if&gt;\n&lt;/#list&gt;&quot;,&quot;name&quot;:&quot;Controller&quot;,&quot;path&quot;:&quot;src/main/java/${basePackageDir}/controller/${table.upperCamelName}Controller.java&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot; ?&gt;\r\n&lt;!DOCTYPE mapper PUBLIC \&quot;-//mybatis.org//DTD Mapper 3.0//EN\&quot; \&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd\&quot; &gt;\r\n&lt;mapper namespace=\&quot;${basePackage}.mapper.${table.upperCamelName}Mapper\&quot;&gt;\r\n\r\n    &lt;resultMap id=\&quot;${table.lowerCamelName}Map\&quot; type=\&quot;${basePackage}.model.${table.upperCamelName}\&quot;&gt;\r\n        &lt;#list table.columns as column&gt;\r\n        &lt;#if column.primaryKey&gt;\r\n        &lt;id property=\&quot;${column.lowerCamelName}\&quot; column=\&quot;${column.columnName}\&quot;/&gt;\r\n        &lt;#else&gt;\r\n        &lt;result property=\&quot;${column.lowerCamelName}\&quot; column=\&quot;${column.columnName}\&quot;/&gt;\r\n        &lt;/#if&gt;\r\n        &lt;/#list&gt;\r\n    &lt;/resultMap&gt;\r\n\r\n    &lt;!--通过ID查询单个${table.remarks}--&gt;\r\n    &lt;select id=\&quot;findById\&quot; resultMap=\&quot;${table.lowerCamelName}Map\&quot;&gt;\r\n        SELECT &lt;#list table.columns as column&gt;&lt;#if column_index!=0&gt;,&lt;/#if&gt;${column.columnName}&lt;/#list&gt; FROM ${table.tableName}\r\n        WHERE &lt;#list table.columns as column&gt;&lt;#if column.primaryKey&gt;${column.columnName}&lt;/#if&gt;&lt;/#list&gt;=&lt;#noparse&gt;#{id}&lt;/#noparse&gt;\r\n    &lt;/select&gt;\r\n\r\n    &lt;!--分页查询${table.remarks}--&gt;\r\n    &lt;select id=\&quot;findByPage\&quot; resultMap=\&quot;${table.lowerCamelName}Map\&quot;&gt;\r\n        SELECT &lt;#list table.columns as column&gt;&lt;#if column_index!=0&gt;,&lt;/#if&gt;${column.columnName}&lt;/#list&gt; FROM ${table.tableName}\r\n    &lt;/select&gt;\r\n\r\n    &lt;!--新增${table.remarks}--&gt;\r\n    &lt;insert id=\&quot;insert\&quot;&gt;\r\n        INSERT INTO ${table.tableName}(&lt;#list table.columns as column&gt;&lt;#if column_index!=0&gt;,&lt;/#if&gt;${column.columnName}&lt;/#list&gt;)\r\n        VALUES (&lt;#list table.columns as column&gt;&lt;#if column_index!=0&gt;,&lt;/#if&gt;&lt;#noparse&gt;#{&lt;/#noparse&gt;${column.lowerCamelName}}&lt;/#list&gt;)\r\n    &lt;/insert&gt;\r\n\r\n    &lt;!--修改${table.remarks}--&gt;\r\n    &lt;update id=\&quot;update\&quot;&gt;\r\n        UPDATE ${table.tableName} SET &lt;#list table.columns as column&gt;&lt;#if !column.primaryKey&gt;&lt;#if table.columns[0].primaryKey&amp;&amp;column_index!=1&gt;,&lt;/#if&gt;${column.columnName}=&lt;#noparse&gt;#{&lt;/#noparse&gt;${column.lowerCamelName}}&lt;/#if&gt;&lt;/#list&gt;\r\n        WHERE &lt;#list table.columns as column&gt;&lt;#if column.primaryKey&gt;${column.columnName}=&lt;#noparse&gt;#{&lt;/#noparse&gt;${column.lowerCamelName}}&lt;/#if&gt;&lt;/#list&gt;\r\n    &lt;/update&gt;\r\n\r\n    &lt;!--通过ID删除单个${table.remarks}--&gt;\r\n    &lt;delete id=\&quot;deleteById\&quot;&gt;\r\n        DELETE FROM ${table.tableName}\r\n        WHERE &lt;#list table.columns as column&gt;&lt;#if column.primaryKey&gt;${column.columnName}&lt;/#if&gt;&lt;/#list&gt;=&lt;#noparse&gt;#{id}&lt;/#noparse&gt;\r\n    &lt;/delete&gt;\r\n\r\n&lt;/mapper&gt;&quot;,&quot;name&quot;:&quot;MapperXML&quot;,&quot;path&quot;:&quot;src/main/resources/mapper/${table.upperCamelName}Mapper.xml&quot;,&quot;type&quot;:2}]"/>
                    <option name="id" value="1512350472600756225"/>
                    <option name="name" value="Spring Boot With Mybatis"/>
                    <option name="organizationId" value="1493844491293724674"/>
                    <option name="organizationName" value="ilsmp"/>
                    <option name="projectType" value="2"/>
                    <option name="publicFlag" value="1"/>
                    <option name="updateTime" value="2022-04-29 12:17:51"/>
                </ProjectTemplateDO>
                <ProjectTemplateDO>
                    <option name="createName" value="zjh"/>
                    <option name="createTime" value="2022-06-23 09:38:08"/>
                    <option name="description" value="采用vue-element-admin的分层结构，根据表结构生成列表管理功能"/>
                    <option name="fileTemplates"
                            value="[{&quot;content&quot;:&quot;import request from '@/utils/request'\r\n\r\nexport function list(data) {\r\n  return request({\r\n    url: '/${table.lowerCamelName}/list',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\nexport function get(id) {\r\n  return request({\r\n    url: '/${table.lowerCamelName}/get',\r\n    method: 'get',\r\n    params: { id }\r\n  })\r\n}\r\nexport function create(data) {\r\n  return request({\r\n    url: '/${table.lowerCamelName}/create',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\nexport function update(data) {\r\n  return request({\r\n    url: '/${table.lowerCamelName}/update',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\nexport function del(id) {\r\n  return request({\r\n    url: '/${table.lowerCamelName}/delete',\r\n    method: 'post',\r\n    params: { id }\r\n  })\r\n}&quot;,&quot;name&quot;:&quot;api&quot;,&quot;path&quot;:&quot;src/api/${table.upperCamelName}.js&quot;,&quot;type&quot;:2},{&quot;content&quot;:&quot;&lt;template&gt;\r\n  &lt;div class=\&quot;app-container\&quot;&gt;\r\n    &lt;div class=\&quot;filter-container\&quot;&gt;\r\n      &lt;el-input v-model=\&quot;listQuery.keyword\&quot; placeholder=\&quot;关键字\&quot; style=\&quot;width: 200px\&quot; class=\&quot;filter-item\&quot;\r\n        @keyup.enter.native=\&quot;handleFilter\&quot; /&gt;\r\n      &lt;el-button class=\&quot;filter-item\&quot; style=\&quot;margin-left: 10px\&quot; type=\&quot;primary\&quot; icon=\&quot;el-icon-search\&quot;\r\n        @click=\&quot;handleFilter\&quot;&gt;\r\n        搜索\r\n      &lt;/el-button&gt;\r\n      &lt;el-button class=\&quot;filter-item\&quot; style=\&quot;margin-left: 10px\&quot; type=\&quot;primary\&quot; icon=\&quot;el-icon-edit\&quot; @click=\&quot;handleCreate\&quot;&gt;\r\n        添加\r\n      &lt;/el-button&gt;\r\n    &lt;/div&gt;\r\n\r\n    &lt;el-table :key=\&quot;tableKey\&quot; v-loading=\&quot;listLoading\&quot; :data=\&quot;list\&quot; border fit highlight-current-row style=\&quot;width: 100%\&quot;&gt;\r\n      &lt;#list table.columns as column&gt;\r\n        &lt;el-table-column label=\&quot;${column.remarks}\&quot; align=\&quot;center\&quot;&gt;\r\n          &lt;template slot-scope=\&quot;{ row }\&quot;&gt;\r\n            &lt;span&gt;{{ row.${ column.lowerCamelName } }}&lt;/span&gt;\r\n          &lt;/template&gt;\r\n        &lt;/el-table-column&gt;\r\n      &lt;/#list&gt;\r\n      &lt;el-table-column label=\&quot;操作\&quot; align=\&quot;center\&quot; class-name=\&quot;small-padding fixed-width\&quot;&gt;\r\n        &lt;template slot-scope=\&quot;{ row, $index }\&quot;&gt;\r\n          &lt;el-button size=\&quot;mini\&quot; type=\&quot;primary\&quot; @click=\&quot;handleUpdate(row)\&quot;&gt;\r\n            编辑\r\n          &lt;/el-button&gt;\r\n          &lt;el-button size=\&quot;mini\&quot; type=\&quot;danger\&quot; @click=\&quot;handleDelete(row, $index)\&quot;&gt;\r\n            删除\r\n          &lt;/el-button&gt;\r\n        &lt;/template&gt;\r\n      &lt;/el-table-column&gt;\r\n    &lt;/el-table&gt;\r\n\r\n    &lt;pagination v-show=\&quot;total &gt; 0\&quot; :total=\&quot;total\&quot; :page.sync=\&quot;listQuery.page\&quot; :limit.sync=\&quot;listQuery.limit\&quot;\r\n      @pagination=\&quot;getList\&quot; /&gt;\r\n\r\n    &lt;el-dialog :title=\&quot;textMap[dialogStatus]\&quot; :visible.sync=\&quot;dialogFormVisible\&quot;&gt;\r\n      &lt;el-form ref=\&quot;dataForm\&quot; :rules=\&quot;rules\&quot; :model=\&quot;temp\&quot; label-width=\&quot;100px\&quot; style=\&quot;width: 400px; margin-left: 50px\&quot;&gt;\r\n        &lt;#list table.columns as column&gt;\r\n          &lt;el-form-item label=\&quot;${column.remarks}\&quot; prop=\&quot;${ column.lowerCamelName }\&quot;&gt;\r\n            &lt;el-input v-model=\&quot;temp.${ column.lowerCamelName }\&quot; /&gt;\r\n          &lt;/el-form-item&gt;\r\n        &lt;/#list&gt;\r\n      &lt;/el-form&gt;\r\n      &lt;div slot=\&quot;footer\&quot; class=\&quot;dialog-footer\&quot;&gt;\r\n        &lt;el-button @click=\&quot;dialogFormVisible = false\&quot;&gt; 取消 &lt;/el-button&gt;\r\n        &lt;el-button type=\&quot;primary\&quot; @click=\&quot;dialogStatus === 'create' ? createData() : updateData()\&quot;&gt;\r\n          确定\r\n        &lt;/el-button&gt;\r\n      &lt;/div&gt;\r\n    &lt;/el-dialog&gt;\r\n  &lt;/div&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nimport { create, update, list, del } from \&quot;@/api/${table.upperCamelName}\&quot;;\r\nimport Pagination from \&quot;@/components/Pagination\&quot;;\r\n\r\nexport default {\r\n  name: \&quot;${table.lowerCamelName}\&quot;,\r\n  components: { Pagination },\r\n  data() {\r\n    return {\r\n      tableKey: 0,\r\n      list: [],\r\n      total: 0,\r\n      listLoading: true,\r\n      listQuery: {\r\n        page: 1,\r\n        limit: 10,\r\n        keyword: \&quot;\&quot;,\r\n      },\r\n      temp: {\r\n        &lt;#list table.columns as column &gt;\r\n        ${ column.lowerCamelName }: undefined,\r\n        &lt;/#list&gt;\r\n      },\r\n      dialogFormVisible: false,\r\n      dialogStatus: \&quot;\&quot;,\r\n      textMap: {\r\n        update: \&quot;编辑\&quot;,\r\n        create: \&quot;添加\&quot;,\r\n      },\r\n      rules: {\r\n        &lt;#list table.columns as column &gt;\r\n        ${ column.lowerCamelName }: [{ required: true, message: \&quot;${ column.remarks }必填\&quot;, trigger: \&quot;blur\&quot; }],\r\n        &lt;/#list&gt;        \r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getList();\r\n  },\r\n  methods: {\r\n    getList() {\r\n      this.listLoading = true;\r\n      list({\r\n        keyword: this.listQuery.keyword,\r\n        pageNumber: this.listQuery.page,\r\n        pageSize: this.listQuery.limit,\r\n      }).then((response) =&gt; {\r\n        this.list = response.data.list;\r\n        this.total = response.data.totalNumber;\r\n        this.listLoading = false;\r\n      });\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1;\r\n      this.getList();\r\n    },\r\n    handleCreate() {\r\n      this.temp={\r\n        &lt;#list table.columns as column &gt;\r\n        ${ column.lowerCamelName }: undefined,\r\n        &lt;/#list&gt;\r\n      }\r\n      this.dialogStatus = \&quot;create\&quot;;\r\n      this.dialogFormVisible = true;\r\n      this.$nextTick(() =&gt; {\r\n        this.$refs[\&quot;dataForm\&quot;].clearValidate();\r\n      });\r\n    },\r\n    createData() {\r\n      this.$refs[\&quot;dataForm\&quot;].validate((valid) =&gt; {\r\n        if (valid) {\r\n          create(this.temp).then(() =&gt; {\r\n            this.dialogFormVisible = false;\r\n            this.$message({\r\n              type: \&quot;success\&quot;,\r\n              message: \&quot;添加成功\&quot;,\r\n            });\r\n            this.getList();\r\n          });\r\n        }\r\n      });\r\n    },\r\n    handleUpdate(row) {\r\n      this.temp = Object.assign({}, row); // copy obj\r\n      this.dialogStatus = \&quot;update\&quot;;\r\n      this.dialogFormVisible = true;\r\n      this.$nextTick(() =&gt; {\r\n        this.$refs[\&quot;dataForm\&quot;].clearValidate();\r\n      });\r\n    },\r\n    updateData() {\r\n      this.$refs[\&quot;dataForm\&quot;].validate((valid) =&gt; {\r\n        if (valid) {\r\n          const tempData = Object.assign({}, this.temp);\r\n          update(tempData).then(() =&gt; {\r\n            this.dialogFormVisible = false;\r\n            this.$message({\r\n              type: \&quot;success\&quot;,\r\n              message: \&quot;编辑成功\&quot;,\r\n            });\r\n            this.getList();\r\n          });\r\n        }\r\n      });\r\n    },\r\n    handleDelete(row, index) {\r\n      this.$confirm(\&quot;确定删除?\&quot;, \&quot;提示\&quot;, {\r\n        confirmButtonText: \&quot;确定\&quot;,\r\n        cancelButtonText: \&quot;取消\&quot;,\r\n        type: \&quot;warning\&quot;,\r\n      })\r\n        .then(() =&gt; {\r\n          del(row.id).then(() =&gt; {\r\n            this.$message({\r\n              type: \&quot;success\&quot;,\r\n              message: \&quot;删除成功!\&quot;,\r\n            });\r\n            this.getList();\r\n          });\r\n        })\r\n        .catch(() =&gt; { });\r\n    },\r\n  },\r\n};\r\n&lt;/script&gt;&quot;,&quot;name&quot;:&quot;vue&quot;,&quot;path&quot;:&quot;src/views/${table.lowerCamelName}/${table.lowerCamelName}.vue&quot;,&quot;type&quot;:2}]"/>
                    <option name="id" value="1512350472600756226"/>
                    <option name="name" value="vue-element-admin"/>
                    <option name="organizationId" value="1493844491293724674"/>
                    <option name="organizationName" value="ilsmp"/>
                    <option name="projectType" value="3"/>
                    <option name="publicFlag" value="1"/>
                    <option name="updateTime" value="2022-06-23 11:26:10"/>
                </ProjectTemplateDO>
            </list>
        </option>
    </component>
</application>