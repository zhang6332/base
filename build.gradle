plugins {
    id 'org.jetbrains.intellij' version '1.10.0'
    id 'java'
}
group 'com.ilsmp'
version '1.1'
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.31'
    implementation 'org.modelmapper:modelmapper:2.3.0'
    implementation fileTree(dir: 'lib', include: ['*.jar'])
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
    implementation('com.baomidou:mybatis-plus-core:3.5.0') {
        exclude group: 'com.baomidou', module: 'mybatis-plus-annotation'
    }
    implementation 'cn.smallbun.screw:screw-core:1.0.5'
    implementation 'com.alibaba:druid:1.2.8'
    implementation('org.springframework.boot:spring-boot-starter-validation:2.6.2') {
        exclude group: 'org.springframework'
        exclude group: 'org.springframework.boot'
    }
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.47'
    implementation 'mysql:mysql-connector-java:8.0.27'
    implementation 'org.postgresql:postgresql:42.3.1'
    implementation 'com.oracle.database.jdbc:ojdbc8:21.4.0.0.1'
    implementation 'com.oracle.database.nls:orai18n:21.4.0.0.1'
}
intellij {
    version.set('2022.1.3')
    updateSinceUntilBuild.set(false)
    sandboxDir.set("${rootProject.projectDir}/idea-sandbox/idea-${'2022.1.3'}")
    plugins.set(['java', 'maven'])
}
patchPluginXml {
    changeNotes = """
      针对base包提供定制化适配
      """
}
test {
    useJUnitPlatform()
}

Properties properties = new Properties()
def lp = project.rootProject.file('local.properties')
def TOKEN
if (lp.exists()) {
    properties.load lp.newDataInputStream()
    TOKEN = properties.getProperty("TOKEN")
}
publishPlugin {
    token.set(TOKEN)
}
buildPlugin {
    buildSearchableOptions.enabled = false
}